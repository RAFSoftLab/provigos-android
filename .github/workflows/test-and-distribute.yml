name: Test & Firebase App Distribution

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/gradle-wrapper.properties', '**/build.gradle*', '**/gradle.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Create secrets.properties
        run: |
          echo "google_client_id=${{ secrets.GOOGLE_CLIENT_ID }}" > secrets.properties
          echo "github_client_id=${{ secrets.GH_CLIENT_ID }}" >> secrets.properties
          echo "github_client_secret=${{ secrets.GH_CLIENT_SECRET }}" >> secrets.properties
          echo "spotify_client_id=${{ secrets.SPOTIFY_CLIENT_ID }}" >> secrets.properties
          echo "spotify_client_secret=${{ secrets.SPOTIFY_CLIENT_SECRET }}" >> secrets.properties

      - name: Run Unit Tests
        run: ./gradlew test --stacktrace

  build-and-distribute:
    name: Build & Distribute APK
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/gradle-wrapper.properties', '**/build.gradle*', '**/gradle.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Create secrets.properties
        run: |
          echo "google_client_id=${{ secrets.GOOGLE_CLIENT_ID }}" > secrets.properties
          echo "github_client_id=${{ secrets.GH_CLIENT_ID }}" >> secrets.properties
          echo "github_client_secret=${{ secrets.GH_CLIENT_SECRET }}" >> secrets.properties
          echo "spotify_client_id=${{ secrets.SPOTIFY_CLIENT_ID }}" >> secrets.properties
          echo "spotify_client_secret=${{ secrets.SPOTIFY_CLIENT_SECRET }}" >> secrets.properties

      - name: Generate Debug Keystore
        run: |
          keytool -genkey -v -keystore debug.keystore \
          -alias androiddebugkey -keyalg RSA -keysize 2048 -validity 10000 \
          -dname "CN=Android Debug,O=Android,C=US" \
          -storepass android -keypass android

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build APK
        run: ./gradlew assembleRelease

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/apk/release/app-release.apk

      - name: Distribute to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          testers: ${{ secrets.TESTERS }}
          file: app/build/outputs/apk/release/app-release.apk
